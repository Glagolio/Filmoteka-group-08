{"mappings":"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","sources":["src/js/common.js","src/js/fetchMovies.js","src/js/storage.js","src/js/loadPage.js","src/js/pageInStorage.js","src/js/modal.js"],"sourcesContent":["const KEY = '659c146febfafc17fd54baa17527f7fa';","const formField = document.querySelector('.form-field');\nconst homeList = document.querySelector('.home-list');\nconst spinner = document.querySelector('.spinner-loader');\nlet movieName = '';\n\nformField.addEventListener('submit', event => {\n  event.preventDefault();\n  spinner.classList.remove('is-hidden');\n  movieName = formField.elements.query.value.trim();\n  if (movieName === '') {\n    spinner.classList.add('is-hidden');\n    return alert('Empty field');\n  }\n  fetchMovies(movieName).then(({ movies }) => {\n    homeList.innerHTML = movieCards(movies);\n    spinner.classList.add('is-hidden');\n  });\n});\n\n\nexport function movieCards (movies) {\n  return movies\n    .map(({ id, poster_path, title, original_title, genres_ids, release_date }) => {\n        const imgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        return `<li class=\"home-card js-modal-open\" data-card-movie-id=\"${id}\">\n            <a href=\"#\" class=\"home-card__link\">\n                <div class=\"card-info\">\n                    <img class=\"home-card__img\" src=\"${imgUrl}\" alt=\"${title}\">\n                    <h2 class=\"card-info__title\">${original_title}</h2>\n                    <p class=\"card-info_descr\">\n                        <span>${genres_ids}</span>\n                        |\n                        <span>${release_date}</span>\n                    </p>\n                </div>\n            </a>\n        </li>`;\n    })\n    .join('');\n};\n\nfunction fetchMovies (movieName){\n  const searchParams = new URLSearchParams({\n    api_key: '659c146febfafc17fd54baa17527f7fa',\n    language: 'en-US',\n    query: movieName,\n  });\n\n  return fetch(`https://api.themoviedb.org/3/search/movie?${searchParams}`)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error(res.statusText);\n    })\n    .then(data => {\n      return {\n        movies: data.results\n      };\n    });\n};","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n    try { \n      if (localStorage.getItem(key) !== null) { localStorage.removeItem(key); }\n    } catch (error) {\n        console.error(\"Remove state error: \", error.message);\n    }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import storage from './storage'\n\nconst KEY = '659c146febfafc17fd54baa17527f7fa';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nasync function fetchFilms(KEY, MEDIA_TYPE, TIME_WINDOW) {\n  let response = await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}&media_type=${MEDIA_TYPE}&time_window=${TIME_WINDOW}`\n  );\n  return response.json();\n}\nfetchFilms(KEY, MEDIA_TYPE, TIME_WINDOW).then(({ results }) => {\n  // console.dir(results);\n  storage.save('movies', results);\n});\n","import storage from './storage'\n\nconst STORAGE_PAGE_KEY = \"Start on last visit page?\";\nconst storagePage = storage.load(STORAGE_PAGE_KEY)\n\nfunction changeStoragePage() {\n    if (page > 1 && page !== storagePage.value) {        \n        storage.remove(STORAGE_PAGE_KEY);\n        storage.save(STORAGE_PAGE_KEY, { value: page });\n    }    \n}\nfunction loadStoragePage() { \n    page = storagePage.value\n}\n","import storage from \"./storage\";\n\nconst backdrop = document.querySelector('[data-modal]');\nconst closeButton = document.querySelector('[data-modal-close]');\nconst cardsContainer = document.querySelector('.home-container');\n\ncardsContainer.addEventListener('click', e =>{\n  //Тиць по 'js-modal-open' -> відкриває модалку\n  if(e.target.closest('.js-modal-open')) openModal();\n})\n\n\n// Тиць по 'data-modal-close' ->закриває модалку\ncloseButton.addEventListener('click', closeModal);\n\n//Press по Esc ->закриває модалку\nfunction pressEsc(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n\n// Тиць по backdrop -> закриває модалку\nbackdrop.addEventListener('click', BackdropClick);\nfunction BackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModal();\n  }\n}\n\n// Якщо модалка відкрита -> кидаємо AddEventListener\nfunction openModal() {\n  document.addEventListener('keydown', pressEsc);\n  backdrop.classList.remove('is-hidden');\n}\n\n// Як тільки закривається модалка -> знімаємо EventListener\nfunction closeModal() {\n  document.addEventListener('keydown', pressEsc);\n  backdrop.classList.add('is-hidden');\n}\n\n\n\n\n\n\n/* -----------------------\n\nModal buttons functionality\n\n----------------------- */\n\nconst addToWatchedBtn = backdrop.querySelector('.modal-movie__watched');\nconst addToQueueBtn = backdrop.querySelector('.modal-movie__queue');\n\nconst modalButtons = backdrop.querySelector('.modal-movie__buttons')\n\nmodalButtons.addEventListener('click', addMovieToLibrary);\n\nfunction addMovieToLibrary(e){\n  if(e.target.nodeName === 'BUTTON'){\n    let action = 'save';\n    const data = [];\n\n    const key = e.target.dataset?.modalAddTo + '-list';\n    const movieId = modalButtons.closest('.modal-movie').dataset.modalMovieId;\n\n    const value = storage.load('movies')?.find(movie => movie.id.toString() === movieId);\n    console.dir(value.id);\n\n    let currentList = storage.load(key) || [];\n    console.dir(currentList);\n\n\n    if(storage.load(key) && storage.load(key).some(movie => movie.id === value.id)) {\n      console.log('has');\n      currentList = currentList.filter(movie => movie.id.toString() != value.id);\n      // console.dir(storage.load(key));\n      // console.dir(currentList);\n    }\n    else {\n      console.log('add');\n      currentList.push(value);\n      // console.dir(currentList);\n    }\n\n      storage.save(key, currentList);\n  }\n}"],"names":["$16230cf6cab73dd4$var$formField","document","querySelector","$16230cf6cab73dd4$var$homeList","$16230cf6cab73dd4$var$spinner","$16230cf6cab73dd4$var$movieName","addEventListener","event","preventDefault","classList","remove","elements","query","value","trim","add","alert","movieName1","searchParams","URLSearchParams","api_key","language","fetch","then","res","ok","json","Error","statusText","data","movies","results","$16230cf6cab73dd4$var$fetchMovies","innerHTML","map","id","poster_path","title","original_title","genres_ids","release_date","join","$16230cf6cab73dd4$export$867842ca7ae981de","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","async","KEY1","MEDIA_TYPE1","TIME_WINDOW1","$8a393290a593310b$var$fetchFilms","save","load","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$closeButton","$8a7e756c566dd1ea$var$pressEsc","e","code","$8a7e756c566dd1ea$var$closeModal","target","closest","currentTarget","$8a7e756c566dd1ea$var$modalButtons","nodeName","ref","ref1","dataset","modalAddTo","movieId","modalMovieId","find","movie","toString","dir","currentList","some","log","filter","push"],"version":3,"file":"index.84c0836f.js.map"}