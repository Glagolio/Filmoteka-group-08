{"mappings":"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","sources":["src/js/storage.js","src/js/pageInStorage.js","src/js/modal.js","src/js/fetchMovies.js","src/js/libFunc.js","src/js/renderLibMovie.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n    try { \n      if (localStorage.getItem(key) !== null) { localStorage.removeItem(key); }\n    } catch (error) {\n        console.error(\"Remove state error: \", error.message);\n    }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import storage from './storage';\n\nexport const STORAGE_PAGE_KEY = 'last visit page';\nexport const storagePage = storage.load(STORAGE_PAGE_KEY);\n\ncurrentPage = 3;\n\nchangeStoragePage();\n\nfunction changeStoragePage() {\n  if (currentPage > 1 && currentPage !== storagePage) {\n    storage.remove(STORAGE_PAGE_KEY);\n    storage.save(STORAGE_PAGE_KEY, currentPage);\n  }\n}\n","import storage from './storage';\n\nconst backdrop = document.querySelector('[data-modal]');\nconst closeButton = document.querySelector('[data-modal-close]');\nconst cardsContainer = document.querySelector('.home-container');\n\ncardsContainer.addEventListener('click', e => {\n  //Тиць по 'js-modal-open' -> відкриває модалку\n  if (e.target.closest('.js-modal-open')) {\n    e.preventDefault();\n    openModal(e.target.closest('.js-modal-open').dataset.cardMovieId);\n  }\n});\n\n// Тиць по 'data-modal-close' ->закриває модалку\ncloseButton.addEventListener('click', closeModal);\n\n//Press по Esc ->закриває модалку\nfunction pressEsc(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n\n// Тиць по backdrop -> закриває модалку\nbackdrop.addEventListener('click', backdropClick);\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModal();\n    return;\n  }\n  if (e.target.nodeName === 'BUTTON') {\n    addMovieToLibrary(e.target.closest('.movie-btn'));\n  }\n}\n\n// Якщо модалка відкрита -> кидаємо AddEventListener\nfunction openModal(movieId) {\n  document.addEventListener('keydown', pressEsc);\n\n  backdrop.querySelector('.modal-movie').dataset.modalMovieId = movieId;\n  backdrop.querySelector('.modal-movie').innerHTML = getModalMovieMarkup(movieId);\n  document.body.style.overflow = 'hidden';\n  backdrop.classList.remove('is-hidden');\n}\n\n// Як тільки закривається модалка -> знімаємо EventListener\nfunction closeModal() {\n  document.addEventListener('keydown', pressEsc);\n  document.body.style.overflow = '';\n  backdrop.classList.add('is-hidden');\n}\n\nfunction getModalMovieMarkup(movieId) {\n  const {\n    poster_path,\n    title,\n    original_title,\n    genres_ids,\n    release_date,\n    vote_average,\n    vote_count,\n    popularity,\n    overview,\n  } = storage.load('movies')?.find(movie => movie.id.toString() === movieId);\n\n  movieId = movieId.toString();\n\n  // const btnAddToWatched = isInLibrary('watched-list', movieId.toString())\n  //   ? `<button class=\"modal-movie__btn modal-movie_btn-watched added\" data-modal-add-to=\"watched\">REMOVE FROM<br>WATCHED</button>`\n  //   : `<button class=\"modal-movie__btn modal-movie__btn-watched\" data-modal-add-to=\"watched\">ADD TO<br>WATCHED</button>`;\n\n  // const btnAddToQueue = isInLibrary('queue-list', movieId.toString())\n  //   ? `<button class=\"modal-movie__btn modal-movie__btn-queue added\" data-modal-add-to=\"queue\">REMOVE FROM<br>QUEUE</button>`\n  //   : `<button class=\"modal-movie__btn modal-movie__btn-queue\" data-modal-add-to=\"queue\">ADD TO<br>QUEUE</button>`;\n\n  let addedClass = isInLibrary('watched-list', movieId.toString()) ? 'added' : '';\n  const btnAddToWatched = `<div class=\"modal-movie__btn movie-btn movie-btn--watched ${addedClass}\" data-modal-add-to=\"watched\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>WATCHED</button>\n                            <button class=\"add\">ADD TO<br>WATCHED</button>\n                          </div>\n                        </div>`;\n\n  addedClass = isInLibrary('queue-list', movieId.toString()) ? 'added' : '';\n  const btnAddToQueue = `<div class=\"modal-movie__btn movie-btn movie-btn--queue ${addedClass}\" data-modal-add-to=\"queue\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>QUEUE</button>\n                            <button class=\"add\">ADD TO<br>QUEUE</button>\n                          </div>\n                        </div>`;\n\n  return `<div class=\"modal-movie__poster\">\n            <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt=\"${title}\" />\n          </div>\n            <div class=\"modal-movie__info\">\n                <h2 class=\"modal-movie__title\">${title}</h2>\n                <table class=\"movie-table\">\n                    <tr>\n                        <td class=\"movie-table__title\">Vote / Votes</td>\n                        <td class=\"movie-table__info\">\n                            <span class=\"vote\">${vote_average}</span>\n                            <span>/</span>\n                            <span class=\"votes\">${vote_count}</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Popularity</td>\n                        <td class=\"movie-table__info\">${popularity}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Original Title</td>\n                        <td class=\"movie-table__info\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Genre</td>\n                        <td class=\"movie-table__info\">${genres_ids}</td>\n                    </tr>\n                </table>\n                <div class=\"modal-movie__box\">\n                <div class=\"modal-movie__about\">\n                    <p class=\"modal-movie__description\">ABOUT</p>\n                    <p class=\"modal-movie__text\">${overview}</p>\n                </div>\n                <div class=\"modal-movie__buttons\">\n                    ${btnAddToWatched}\n                    ${btnAddToQueue}\n                </div>\n                </div>\n            </div>`;\n}\n\n/* -----------------------\n\nModal buttons functionality\n\n----------------------- */\n\nfunction addMovieToLibrary(button) {\n  // console.dir(button);\n  const key = button.dataset?.modalAddTo + '-list';\n  const movieId = button.closest('.modal-movie').dataset.modalMovieId;\n\n  const value = storage.load('movies')?.find(movie => movie.id.toString() === movieId);\n  // console.dir(value.id);\n\n  let currentList = storage.load(key) || [];\n  // console.dir(currentList);\n\n  if (storage.load(key) && isInLibrary(key, value.id.toString())) {\n    button.classList.remove('added');\n    currentList = currentList.filter(movie => movie.id.toString() != value.id);\n  } else {\n    currentList.push(value);\n    button.classList.add('added');\n  }\n\n  storage.save(key, currentList);\n}\n\nfunction isInLibrary(storageKey, valueId) {\n  return storage.load(storageKey)?.some(movie => movie.id.toString() === valueId);\n}\n","import storage from './storage';\n\nconst formField = document.querySelector('.form-field');\nconst homeList = document.querySelector('.home-list');\nconst spinner = document.querySelector('.spinner-loader');\nlet movieName = '';\n\nformField.addEventListener('submit', event => {\n  event.preventDefault();\n  spinner.classList.remove('is-hidden');\n  movieName = formField.elements.query.value.trim();\n  if (movieName === '') {\n    spinner.classList.add('is-hidden');\n    return alert('Empty field');\n  }\n  fetchMovies(movieName).then(({ movies }) => {\n    storage.save('movies', movies);\n    homeList.innerHTML = movieCards(movies);\n    spinner.classList.add('is-hidden');\n  });\n});\n\nexport function movieCards(movies) {\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        original_title,\n        genres_ids,\n        release_date,\n      }) => {\n        const imgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        const year = new Date(release_date).getFullYear();\n        return `<li class=\"home-card js-modal-open\" data-card-movie-id=\"${id}\">\n            <a href=\"#\" class=\"home-card__link\">\n                <div class=\"card-info\">\n                    <img class=\"home-card__img\" src=\"${imgUrl}\" alt=\"${title}\">\n                    <h2 class=\"card-info__title\">${original_title}</h2>\n                    <p class=\"card-info_descr\">\n                        <span>${genres_ids}</span>\n                        |\n                        <span>${year}</span>\n                    </p>\n                </div>\n            </a>\n        </li>`;\n      }\n    )\n    .join('');\n}\n\nasync function fetchMovies(movieName) {\n  const searchParams = new URLSearchParams({\n    api_key: '659c146febfafc17fd54baa17527f7fa',\n    language: 'en-US',\n    query: movieName,\n  });\n\n  return fetch(`https://api.themoviedb.org/3/search/movie?${searchParams}`)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error(res.statusText);\n    })\n    .then(data => {\n      return {\n        movies: data.results,\n      };\n    });\n}\n","import { movieCards } from \"./fetchMovies\";\n\nconst libraryContainer = document.querySelector('.library-container');\nexport const libList = document.querySelector('.library-list');\n\nconst active_type = 'header__btn-active';\n\nexport function funnyGuyOnBg() {\n    const funny = libraryContainer.classList.contains('lib-bg-img');\n    if (!libList.firstChild && !funny) {\n        libraryContainer.classList.add('lib-bg-img');\n    } else if (!libList.firstChild && funny) {\n        return;\n    } else {\n        libraryContainer.classList.remove('lib-bg-img');\n    }\n}\n\nexport function renderCardsFromLocalStoradge(key, ul) {\n    const dataLib = localStorage.getItem(key);\n    if (!dataLib) {\n        funnyGuyOnBg();\n        alert('Your list is empty, please fill it');\n        return;\n    };\n    const parsedDataLib = JSON.parse(dataLib);\n    ul.innerHTML = movieCards(parsedDataLib);\n}\n\nexport function checkBtns(btn) {\n    if (!btn.classList.contains(active_type)) btn.classList.add(active_type);\n}\n\nexport function removeMarkUp(elem) {\n    elem.innerHTML = '';\n}","import { removeMarkUp, renderCardsFromLocalStoradge, checkBtns, libList } from './libFunc'\n\nconst btnOpenWatched = document.querySelector('.js-watched-btn');\nconst btnOpenQue = document.querySelector('.js-queue-btn');\n\n//queue btn is active on load\n\nfunction openQueue() {\n    removeMarkUp(libList);\n    renderCardsFromLocalStoradge('queue-list', libList);\n    checkBtns(btnOpenQue);\n}\n\nfunction openWatched() {\n    removeMarkUp(libList);\n    renderCardsFromLocalStoradge('watched-list', libList);\n    checkBtns(btnOpenWatched);\n}\n\nrenderCardsFromLocalStoradge('queue-list', libList);\n\nbtnOpenQue.addEventListener('click', openQueue);\nbtnOpenWatched.addEventListener('click', openWatched);\n\n\n\n\n\n\n\n\n"],"names":["$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","$d567087ff47545b2$export$1826db2756105efe","load","currentPage","remove","save","$8a7e756c566dd1ea$var$backdrop","document","querySelector","$8a7e756c566dd1ea$var$closeButton","$8a7e756c566dd1ea$var$pressEsc","e","code","$8a7e756c566dd1ea$var$closeModal","addEventListener","body","style","overflow","classList","add","$8a7e756c566dd1ea$var$isInLibrary","storageKey","valueId","ref","some","movie","id","toString","movieId","target","closest","preventDefault","dataset","cardMovieId","modalMovieId","innerHTML","poster_path","title","original_title","genres_ids","release_date","vote_average","vote_count","popularity","overview","find","addedClass","btnAddToWatched","$8a7e756c566dd1ea$var$getModalMovieMarkup","currentTarget","nodeName","button","ref1","modalAddTo","currentList","filter","push","$8a7e756c566dd1ea$var$addMovieToLibrary","$16230cf6cab73dd4$var$formField","$16230cf6cab73dd4$var$homeList","$16230cf6cab73dd4$var$spinner","$16230cf6cab73dd4$var$movieName","$16230cf6cab73dd4$export$867842ca7ae981de","movies","map","Date","getFullYear","join","event","elements","query","trim","alert","async","movieName1","searchParams","URLSearchParams","api_key","language","fetch","then","res","ok","json","Error","statusText","data","results","$16230cf6cab73dd4$var$fetchMovies","$69b574558c9ac710$var$libraryContainer","$69b574558c9ac710$export$889a3b120e40c69b","$69b574558c9ac710$export$4b6338b803d4686","ul","dataLib","funny","contains","firstChild","$69b574558c9ac710$export$dcf15d3bcfe56fe3","parsedDataLib","$69b574558c9ac710$export$613a7d747c01f826","btn","$69b574558c9ac710$export$e864d5d1ddc0cefc","elem","$62f0f62f57de4cb0$var$btnOpenWatched","$62f0f62f57de4cb0$var$btnOpenQue"],"version":3,"file":"library.f2c77860.js.map"}