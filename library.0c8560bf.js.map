{"mappings":"qLAAO,SAASA,EAAiBC,GAC7B,OAAOA,EACFC,KACG,EAACC,GACGA,EAAEC,YACFA,EAAWC,MACXA,EAAKC,eACLA,EAAcC,UACdA,EAASC,aACTA,EAAYC,cACZA,EAAaC,eACbA,MAEA,MAAMC,EAAiBC,aAAaC,QAAQ,SACtCC,EAAoBC,KAAKC,MAAML,GAC/BM,EAAW,GACjB,IAAIC,EAAQ,GACZ,IAAK,MAAMC,KAAWZ,EAClB,IAAK,MAAMa,KAASN,EACZK,IAAYC,EAAMjB,KAClBc,EAASI,KAAKD,EAAME,MAChBf,EAAUgB,OAAS,IACnBL,EAAQ,WAMxB,IAAIM,EAAIhB,EAEJiB,EAAIf,EACJF,IACAgB,EAAIA,EAAEE,MAAM,EAAG,IAEfhB,IACAe,EAAIA,EAAEC,MAAM,EAAG,IAInB,MAAO,wEAAwEvB,wJADhE,kCAAkCC,aAIMC,yDACpBC,GAAkBG,0FAErCQ,EAASU,OAAO,EAAG,OAAOT,gGAG1BM,GAAKC,6FAIvB,IAGLG,KAAK,G,gTCvDdC,EAAA,S,wECIA,MAAMC,EAAmBC,SAASC,cAAc,sBAC1CC,EAAUF,SAASC,cAAc,iBAMjCE,EAAiBH,SAASC,cAAc,mBACxCG,EAAaJ,SAASC,cAAc,iBAGpCI,EAAexB,aAAaC,QAAQ,cACpCwB,EAAiBzB,aAAaC,QAAQ,gBACtCyB,EAAmBvB,KAAKC,MAAMoB,GAC9BG,EAAqBxB,KAAKC,MAAMqB,GAsB/B,SAASG,IACU,MAAtBP,EAAQQ,WAAqBX,EAAiBY,UAAUC,IAAI,cAAgBb,EAAiBY,UAAUE,OAAO,a,CApBlHT,WAAYU,iBAAiB,SAG7B,WACIZ,EAAQa,UAAY9C,EAAiBsC,GACrCE,KACA,EAAAO,EAAAC,sBACAb,EAAWO,UAAUC,IApBL,sBAqBhBT,EAAeQ,UAAUE,OArBT,qB,IAcpBV,WAAgBW,iBAAiB,SAUjC,WACIZ,EAAQa,UAAY9C,EAAiBuC,GACrCC,KACA,EAAAO,EAAAC,sBACAb,EAAWO,UAAUE,OA5BL,sBA6BhBV,EAAeQ,UAAUC,IA7BT,qB","sources":["src/js/cardListWithGenres.js","src/library.js","src/js/renderLibMovie.js"],"sourcesContent":["export function markUpWithGenres(arrFromStorage) {\n    return arrFromStorage\n        .map(\n            ({\n                id,\n                poster_path,\n                title,\n                original_title,\n                genre_ids,\n                release_date,\n                original_name,\n                first_air_date,\n            }) => {\n                const valuesOfGenres = localStorage.getItem('arrow');\n                const arrValuesOfGenres = JSON.parse(valuesOfGenres);\n                const genreArr = [];\n                let other = '';\n                for (const genreId of genre_ids) {\n                    for (const genre of arrValuesOfGenres) {\n                        if (genreId === genre.id) {\n                            genreArr.push(genre.name);\n                            if (genre_ids.length > 2) {\n                                other = ',Other';\n                            }\n                        }\n                    }\n                }\n\n                let a = release_date;\n\n                let b = first_air_date;\n                if (release_date) {\n                    a = a.slice(0, 4);\n                }\n                if (first_air_date) {\n                    b = b.slice(0, 4);\n                }\n\n                const imgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n                return `<li class=\"home-card js-modal-open placeholdify\" data-card-movie-id=\"${id}\">\n            <a href=\"#\" class=\"home-card__link\">\n                <div class=\"card-info\">\n                    <img class=\"home-card__img\" src=\"${imgUrl}\" alt=\"${title}\">\n                    <h2 class=\"card-info__title\">${original_title || original_name}</h2>\n                    <p class=\"card-info_descr\">\n                        <span>${genreArr.splice(0, 3)}  ${other}</span>\n                        \n                        |\n                        <span>${a || b}</span>\n                    </p>\n                </div>\n            </a>\n        </li>`;\n            }\n        )\n        .join('');\n}\n\n//console.log(markUpWithGenres(arrValuesOfQueue))","import './js/common';\nimport './js/arrowUp';\nimport './js/pageInStorage';\nimport './js/modal';\nimport './js/pagination';\nimport './js/modalFooter';\nimport './js/cardListWithGenres';\nimport './js/renderLibMovie';\n\n","import { markUpWithGenres } from './cardListWithGenres';\nimport { removeSceletonLoad } from './sceletonLoad';\n\n//containers for render, design changes\nconst libraryContainer = document.querySelector('.library-container');\nconst libList = document.querySelector('.library-list');\n\n//btn accent\nconst active_type = 'header__btn-active';\n\n//listerners\nconst btnOpenWatched = document.querySelector('.js-watched-btn');\nconst btnOpenQue = document.querySelector('.js-queue-btn');\n\n//data parsed\nconst queueStorage = localStorage.getItem('queue-list');\nconst watchedStorage = localStorage.getItem('watched-list');\nconst arrValuesOfQueue = JSON.parse(queueStorage);\nconst arrValuesOfWatched = JSON.parse(watchedStorage);\n\n//queue btn is active on load\nbtnOpenQue?.addEventListener('click', openQueue);\nbtnOpenWatched?.addEventListener('click', openWatched);\n\nfunction openQueue() {\n    libList.innerHTML = markUpWithGenres(arrValuesOfQueue)\n    funnyGuyOnBg();\n    removeSceletonLoad();\n    btnOpenQue.classList.add(active_type);\n    btnOpenWatched.classList.remove(active_type);\n}\n\nfunction openWatched() {\n    libList.innerHTML = markUpWithGenres(arrValuesOfWatched)\n    funnyGuyOnBg();\n    removeSceletonLoad();\n    btnOpenQue.classList.remove(active_type);\n    btnOpenWatched.classList.add(active_type);\n}\n\nexport function funnyGuyOnBg() {\n    libList.firstChild == null ? libraryContainer.classList.add('lib-bg-img') : libraryContainer.classList.remove('lib-bg-img');\n}\n\n\n\n\n\n\n"],"names":["$7715e811529d8f2f$export$644c7ecedbec0546","arrFromStorage","map","id","poster_path","title","original_title","genre_ids","release_date","original_name","first_air_date","valuesOfGenres","localStorage","getItem","arrValuesOfGenres","JSON","parse","genreArr","other","genreId","genre","push","name","length","a","b","slice","splice","join","parcelRequire","$62f0f62f57de4cb0$var$libraryContainer","document","querySelector","$62f0f62f57de4cb0$var$libList","$62f0f62f57de4cb0$var$btnOpenWatched","$62f0f62f57de4cb0$var$btnOpenQue","$62f0f62f57de4cb0$var$queueStorage","$62f0f62f57de4cb0$var$watchedStorage","$62f0f62f57de4cb0$var$arrValuesOfQueue","$62f0f62f57de4cb0$var$arrValuesOfWatched","$62f0f62f57de4cb0$export$dcf15d3bcfe56fe3","firstChild","classList","add","remove","addEventListener","innerHTML","$3iG6G","removeSceletonLoad"],"version":3,"file":"library.0c8560bf.js.map"}