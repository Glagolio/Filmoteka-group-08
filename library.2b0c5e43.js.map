{"mappings":"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","sources":["src/js/modal.js","src/js/storage.js","src/js/checkStoradgeAfterModal.js","src/js/renderLibMovie.js","src/js/cardListWithGenres.js","src/js/sceletonLoad.js","src/js/modalFooter.js"],"sourcesContent":["import storage from './storage';\nimport { rewrite } from './checkStoradgeAfterModal';\n\nexport const backdrop = document.querySelector('[data-modal]');\nexport const closeButton = document.querySelector('[data-modal-close]');\nexport const cardsContainer = document.querySelector('.movies-container');\n\nexport let shouldRewrite = false;\n\ncardsContainer.addEventListener('click', e => {\n  //Тиць по 'js-modal-open' -> відкриває модалку\n  if (e.target.closest('.js-modal-open')) {\n    e.preventDefault();\n    openModal(e.target.closest('.js-modal-open').dataset.cardMovieId);\n  }\n});\n\n// Тиць по 'data-modal-close' ->закриває модалку\ncloseButton.addEventListener('click', closeModal);\n\n//Press по Esc ->закриває модалку\nfunction pressEsc(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n\n// Тиць по backdrop -> закриває модалку\nbackdrop.addEventListener('click', backdropClick);\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModal();\n    return;\n  }\n  if (e.target.nodeName === 'BUTTON') {\n    addMovieToLibrary(e.target.closest('.movie-btn'));\n    ///changes in lib\n    shouldRewrite = true;\n    ///\n  }\n}\n\n// Якщо модалка відкрита -> кидаємо AddEventListener\nfunction openModal(movieId) {\n  document.addEventListener('keydown', pressEsc);\n\n  backdrop.querySelector('.modal-movie').dataset.modalMovieId = movieId;\n  backdrop.querySelector('.modal-movie').innerHTML = getModalMovieMarkup(movieId);\n  document.body.style.overflow = 'hidden';\n  backdrop.classList.remove('is-hidden');\n  const vote_average = backdrop.querySelector('#out').textContent;\n  outNum(vote_average, '#out');\n}\n\nfunction getMovieFromLocalStorage(movieId, key) {\n  return storage.load(key)?.find(movie => movie.id.toString() === movieId);\n}\n\n// Як тільки закривається модалка -> знімаємо EventListener\nfunction closeModal() {\n  storage.remove('current-movie');\n  document.addEventListener('keydown', pressEsc);\n  document.body.style.overflow = '';\n  backdrop.classList.add('is-hidden');\n  ///changes in lib\n  rewrite();\n  shouldRewrite = false;\n  ///\n}\n\nfunction getModalMovieMarkup(movieId) {\n  const currentMovie =\n    getMovieFromLocalStorage(movieId, 'movies') ||\n    getMovieFromLocalStorage(movieId, 'watched-list') ||\n    getMovieFromLocalStorage(movieId, 'queue-list');\n\n  storage.save('current-movie', currentMovie);\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    genre_ids,\n    release_date,\n    vote_average,\n    vote_count,\n    popularity,\n    overview,\n  } = currentMovie;\n\n  movieId = movieId.toString();\n\n  let addedClass = isInLibrary('watched-list', movieId.toString()) ? 'added' : '';\n  const btnAddToWatched = `<div class=\"modal-movie__btn movie-btn movie-btn--watched ${addedClass}\" data-modal-add-to=\"watched\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>WATCHED</button>\n                            <button class=\"add\">ADD TO<br>WATCHED</button>\n                          </div>\n                        </div>`;\n\n  addedClass = isInLibrary('queue-list', movieId.toString()) ? 'added' : '';\n  const btnAddToQueue = `<div class=\"modal-movie__btn movie-btn movie-btn--queue ${addedClass}\" data-modal-add-to=\"queue\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>QUEUE</button>\n                            <button class=\"add\">ADD TO<br>QUEUE</button>\n                          </div>\n                        </div>`;\n\n  return `<div class=\"modal-movie__poster\">\n            <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt=\"${title}\" />\n          </div>\n            <div class=\"modal-movie__info\">\n                <h2 class=\"modal-movie__title\">${title}</h2>\n                <table class=\"movie-table\">\n                    <tr>\n                        <td class=\"movie-table__title\">Vote / Votes</td>\n                        <td class=\"movie-table__info\">\n                            <span id=\"out\" class=\"vote\">${vote_average.toFixed(1)}</span>\n                            <span>/</span>\n                            <span class=\"votes\">${vote_count}</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Popularity</td>\n                        <td class=\"movie-table__info\">${popularity.toFixed(0)}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Original Title</td>\n                        <td class=\"movie-table__info\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Genre</td>\n                        <td class=\"movie-table__info\">${getGenres(genre_ids, 3)}</td>\n                    </tr>\n                </table>\n                <div class=\"modal-movie__box\">\n                <div class=\"modal-movie__about\">\n                    <p class=\"modal-movie__description\">ABOUT</p>\n                    <p class=\"modal-movie__text\">${overview}</p>\n                </div>\n                <div class=\"modal-movie__buttons\">\n                    ${btnAddToWatched}\n                    ${btnAddToQueue}\n                </div>\n                </div>\n            </div>`;\n}\n\n/* -----------------------\n\nModal buttons functionality\n\n----------------------- */\n\nfunction addMovieToLibrary(button) {\n  const key = button.dataset?.modalAddTo + '-list';\n  // const movieId = button.closest('.modal-movie').dataset.modalMovieId;\n  shouldRewrite = true;\n  const SOURCE_KEY = 'current-movie';\n\n  const value = storage.load(SOURCE_KEY);\n\n  if (storage.load(key) && isInLibrary(key, value.id.toString())) {\n    removeFromStorage(key, value, button);\n  } else {\n    if (key.includes('watch') && isInLibrary('queue-list', value.id.toString())) {\n      console.log('already in queue');\n      removeFromStorage(\n        'queue-list',\n        value,\n        button.parentElement.querySelector('.movie-btn--queue')\n      );\n    }\n    addToStorage(key, value, button);\n  }\n}\n\nfunction addToStorage(key, value, button) {\n  ///changes in lib\n  shouldRewrite = true;\n  ///\n  let currentList = storage.load(key) || [];\n  currentList.push(value);\n  button.classList.add('added');\n  storage.save(key, currentList);\n}\n\nfunction removeFromStorage(key, value, button) {\n  ///changes in lib\n  shouldRewrite = true;\n  ///\n  let currentList = storage.load(key) || [];\n  button.classList.remove('added');\n  currentList = currentList.filter(movie => movie.id.toString() != value.id);\n  storage.save(key, currentList);\n}\n\nfunction isInLibrary(storageKey, valueId) {\n  return storage.load(storageKey)?.some(movie => movie.id.toString() === valueId);\n}\n\nfunction outNum(num, elem) {\n  const time = 2500;\n  const step = 0.1;\n  let e = document.querySelector('#out');\n  let n = 0;\n  let t = Math.round(time / (num / step));\n  let interval = setInterval(() => {\n    n = n + step;\n    if (n >= num) {\n      clearInterval(interval);\n    }\n    e.innerHTML = n.toFixed(1);\n  }, t);\n}\n\nexport function getGenres(genre_ids, maxGenresCount) {\n  const genres = storage.load('arrow');\n  const genreArr = [];\n  for (\n    let genreIndex = 0;\n    genreIndex < genre_ids.length && genreIndex < maxGenresCount;\n    genreIndex++\n  ) {\n    for (const value of genres) {\n      if (genre_ids[genreIndex] === value.id) {\n        genreArr.push(value.name);\n      }\n    }\n  }\n  if (genre_ids.length > maxGenresCount) genreArr[maxGenresCount - 1] = 'Other';\n  return genreArr.join(', ');\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n    try { \n      if (localStorage.getItem(key) !== null) { localStorage.removeItem(key); }\n    } catch (error) {\n        console.error(\"Remove state error: \", error.message);\n    }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import { shouldRewrite } from \"./modal\";\nimport { libList, funnyGuyOnBg, spinner } from \"./renderLibMovie\";\nimport { markUpWithGenres } from \"./cardListWithGenres\";\nimport { removeSceletonLoad } from \"./sceletonLoad\";\nimport storage from \"./storage\";\n\n\n\nexport function rewrite() {\n    const current = document.querySelector('.current-page');\n    const itsLib = current.textContent === 'My library';\n    const reloadWillBe = shouldRewrite && itsLib;\n    if (reloadWillBe) {\n        console.log('reload')\n        const btnActive = document.querySelector('.header__btn-active');\n        const itsQueueList = btnActive.textContent === 'Queue';\n        console.log(itsQueueList, 'itsQueueList active')\n        if (itsQueueList) {\n            console.log('q');\n            libList.innerHTML = markUpWithGenres(storage.load('queue-list'));\n            funnyGuyOnBg();\n            spinner.classList.remove('is-hidden');\n            setTimeout(() => {\n                spinner.classList.add('is-hidden');\n            }, 2000);\n            removeSceletonLoad();\n        } else if (!itsQueueList) {\n            console.log('watched-list active')\n            libList.innerHTML = markUpWithGenres(storage.load('watched-list'));\n            funnyGuyOnBg();\n            spinner.classList.remove('is-hidden');\n            setTimeout(() => {\n                spinner.classList.add('is-hidden');\n            }, 2000);\n            removeSceletonLoad();\n        }\n    }\n}\n","import { markUpWithGenres } from './cardListWithGenres';\nimport { removeSceletonLoad } from './sceletonLoad';\nimport { itsQueueList } from './variablesForLib';\nimport storage from './storage';\n\n//containers for render, design changes\nexport const libList = document.querySelector('.library-list');\nexport const spinner = document.querySelector('.spinner-loader');\n//btn accent\nconst active_type = 'header__btn-active';\n\n//listerners\nconst btnOpenWatched = document.querySelector('.js-watched-btn');\nconst btnOpenQue = document.querySelector('.js-queue-btn');\n\nif (document.querySelector('.library-container')) {\n    const btnActive = document.querySelector('.header__btn-active');\n    const itsQueueList = btnActive.textContent === 'Queue';\n    console.log(itsQueueList, 'q')\n    window.onload = () => {\n            libList.innerHTML = markUpWithGenres(storage.load('queue-list'));\n            funnyGuyOnBg();\n            spinner.classList.remove('is-hidden');\n            setTimeout(() => {\n                spinner.classList.add('is-hidden');\n            }, 2000);\n            removeSceletonLoad();\n        }\n    }\n\n\n    //queue btn is active on load\n    btnOpenQue?.addEventListener('click', openQueue);\n    btnOpenWatched?.addEventListener('click', openWatched);\n\n    function openQueue() {\n        libList.innerHTML = markUpWithGenres(arrValuesOfQueue);\n        funnyGuyOnBg();\n        spinner.classList.remove('is-hidden');\n        setTimeout(() => {\n            spinner.classList.add('is-hidden');\n        }, 2000);\n        removeSceletonLoad();\n        btnOpenQue.classList.add(active_type);\n        btnOpenWatched.classList.remove(active_type);\n    }\n\n    function openWatched() {\n        libList.innerHTML = markUpWithGenres(arrValuesOfWatched);\n        funnyGuyOnBg();\n        spinner.classList.remove('is-hidden');\n        setTimeout(() => {\n            spinner.classList.add('is-hidden');\n        }, 2000);\n        removeSceletonLoad();\n        btnOpenQue.classList.remove(active_type);\n        btnOpenWatched.classList.add(active_type);\n    }\n\n\n//data parsed\nexport const queueStorage = localStorage.getItem('queue-list');\nexport const watchedStorage = localStorage.getItem('watched-list');\nexport const arrValuesOfQueue = JSON.parse(queueStorage);\nexport const arrValuesOfWatched = JSON.parse(watchedStorage);\nexport const valuesOfGenres = localStorage.getItem('arrow');\nexport const arrValuesOfGenres = JSON.parse(valuesOfGenres);\n\nexport function funnyGuyOnBg() {\n    const libraryContainer = document.querySelector('.library-container');\n\n    libList.firstChild == null\n        ? libraryContainer.classList.add('lib-bg-img')\n        : libraryContainer.classList.remove('lib-bg-img');\n}\n\n\n","import { getGenres } from './modal';\nimport { arrValuesOfGenres } from './renderLibMovie';\n\nexport function markUpWithGenres(arrFromStorage) {\n  return arrFromStorage\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        original_title,\n        genre_ids,\n        release_date,\n        original_name,\n        first_air_date,\n      }) => {\n        let a = release_date;\n\n        let b = first_air_date;\n        if (release_date) {\n          a = a.slice(0, 4);\n        }\n        if (first_air_date) {\n          b = b.slice(0, 4);\n        }\n\n        const imgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        return `<li class=\"home-card js-modal-open placeholdify\" data-card-movie-id=\"${id}\">\n            <a href=\"#\" class=\"home-card__link\">\n                <div class=\"card-info\">\n                    <img class=\"home-card__img\" src=\"${imgUrl}\" alt=\"${title}\">\n                    <h2 class=\"card-info__title\">${original_title || original_name}</h2>\n                    <p class=\"card-info_descr\">\n                        <span>${getGenres(genre_ids, 3)}</span>\n                        \n                        |\n                        <span>${a || b}</span>\n                    </p>\n                </div>\n            </a>\n        </li>`;\n      }\n    )\n\n    .join('');\n}\n","export function removeSceletonLoad() {\n      setTimeout(() => {\n      const arr = document.querySelectorAll('.placeholdify');\n      arr.forEach(el => el.classList.remove('placeholdify'));\n      },2000);\n}","const modalLink = document.querySelector('.footer__rights-link');\nconst closeBtn = document.querySelector('.modal__closeBtn');\nconst backDropp = document.querySelector('.backdropp');\n\n\nmodalLink.addEventListener('click', e => {\n  e.preventDefault();\n  backDropp.classList.toggle('is-hidden');\n  document.addEventListener('keydown', pressEsc);\n});\ncloseBtn.addEventListener('click', e => {\n  backDropp.classList.remove('is-hidden');\n});\n\nfunction pressEsc(e) {\n  \n\n  if (e.code === 'Escape') {\n    backDropp.classList.add('is-hidden');\n    document.removeEventListener('keydown', pressEsc);\n  }\n}\n\nbackDropp.addEventListener('click', onBackdropp);\n\nfunction onBackdropp(e) {\n  document.removeEventListener('keydown', pressEsc);\n  backDropp.classList.add('is-hidden');\n}\n"],"names":["$5uEKZ","parcelRequire","$8a7e756c566dd1ea$export$48e901322468f6d5","document","querySelector","$8a7e756c566dd1ea$export$efe229eab43a9869","$8a7e756c566dd1ea$export$583b62a65da9ae06","$8a7e756c566dd1ea$export$1a5333fb4ddd5ed2","$8a7e756c566dd1ea$var$pressEsc","e","code","$8a7e756c566dd1ea$var$closeModal","$8a7e756c566dd1ea$var$getMovieFromLocalStorage","movieId","key","ref","default","load","find","movie","id","toString","remove","addEventListener","body","style","overflow","classList","add","$aITp2","rewrite","$8a7e756c566dd1ea$var$removeFromStorage","value","button","currentList","filter","save","$8a7e756c566dd1ea$var$isInLibrary","storageKey","valueId","some","$8a7e756c566dd1ea$export$c5604fa8028da00","genre_ids","maxGenresCount","genres","genreArr","genreIndex","length","push","name","join","target","closest","preventDefault","dataset","modalMovieId","innerHTML","currentMovie","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","addedClass","btnAddToWatched","btnAddToQueue","toFixed","$8a7e756c566dd1ea$var$getModalMovieMarkup","num","elem","time","step","n","t","Math","round","interval","setInterval","clearInterval","$8a7e756c566dd1ea$var$outNum","textContent","$8a7e756c566dd1ea$var$openModal","cardMovieId","currentTarget","nodeName","modalAddTo","SOURCE_KEY","includes","console","log","parentElement","$8a7e756c566dd1ea$var$addToStorage","$8a7e756c566dd1ea$var$addMovieToLibrary","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","serializedState","JSON","stringify","localStorage","setItem","error","message","getItem","undefined","parse","removeItem","$bTcpz","$7ce8fd4ece0f7e69$export$ac774a06f8a156","itsLib","shouldRewrite","itsQueueList","$8uF2F","libList","$adTa2","markUpWithGenres","funnyGuyOnBg","spinner","setTimeout","$3iG6G","removeSceletonLoad","$62f0f62f57de4cb0$export$889a3b120e40c69b","$62f0f62f57de4cb0$export$641374ffb95bc399","$62f0f62f57de4cb0$var$active_type","$62f0f62f57de4cb0$var$btnOpenWatched","$62f0f62f57de4cb0$var$btnOpenQue","window","onload","$62f0f62f57de4cb0$export$dcf15d3bcfe56fe3","$62f0f62f57de4cb0$export$9c39882cc3c8fb2d","$62f0f62f57de4cb0$export$71e637b19c748dac","$62f0f62f57de4cb0$export$a1447c41bd0e7713","$62f0f62f57de4cb0$export$83c92c494f55e6d3","$62f0f62f57de4cb0$export$9b12328d6814fe8c","libraryContainer","firstChild","$7715e811529d8f2f$export$644c7ecedbec0546","arrFromStorage","map","original_name","first_air_date","a","b","slice","getGenres","$2673b7148a402161$export$2e4086a123c0d8cd","querySelectorAll","forEach","el","$44332e2831bc6283$var$modalLink","$44332e2831bc6283$var$closeBtn","$44332e2831bc6283$var$backDropp","$44332e2831bc6283$var$pressEsc","removeEventListener","toggle"],"version":3,"file":"library.2b0c5e43.js.map"}