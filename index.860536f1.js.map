{"mappings":"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","sources":["src/js/fetchMovies.js","src/js/storage.js","src/js/pageInStorage.js","src/js/pagination.js","src/js/modal.js"],"sourcesContent":["import storage from './storage';\n\nconst formField = document.querySelector('.form-field');\nconst homeList = document.querySelector('.home-list');\nconst spinner = document.querySelector('.spinner-loader');\nconst textError = document.querySelector('.search-result');\nlet movieName = '';\n\nformField.addEventListener('submit', event => {\n  event.preventDefault();\n  textError.classList.add('is-hidden');\n  spinner.classList.remove('is-hidden');\n  movieName = formField.elements.query.value.trim();\n  if (movieName === '') {\n    spinner.classList.add('is-hidden');\n    return alert('Empty field');\n  }\n  fetchMovies(movieName).then(({ movies }) => {\n    if (movies.length === 0) {\n      spinner.classList.add('is-hidden');\n      textError.classList.remove('is-hidden');\n      return\n    }\n    storage.save('movies', movies);\n    homeList.innerHTML = movieCards(movies);\n    spinner.classList.add('is-hidden');\n  });\n});\n\nexport function movieCards(movies) {\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        original_title,\n        genres_ids,\n        release_date,\n      }) => {\n        const imgUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n        : './images/netuNichego.png';\n        const year = new Date(release_date).getFullYear();\n        return `<li class=\"home-card js-modal-open\" data-card-movie-id=\"${id}\">\n            <a href=\"#\" class=\"home-card__link\">\n                <div class=\"card-info\">\n                    <img class=\"home-card__img\" src=\"${imgUrl}\" alt=\"${title}\">\n                    <h2 class=\"card-info__title\">${original_title}</h2>\n                    <p class=\"card-info_descr\">\n                        <span>${genres_ids}</span>\n                        |\n                        <span>${year}</span>\n                    </p>\n                </div>\n            </a>\n        </li>`;\n      }\n    )\n    .join('');\n}\n\nasync function fetchMovies(movieName) {\n  const searchParams = new URLSearchParams({\n    api_key: '659c146febfafc17fd54baa17527f7fa',\n    language: 'en-US',\n    query: movieName,\n  });\n\n  return fetch(`https://api.themoviedb.org/3/search/movie?${searchParams}`)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error(res.statusText);\n    })\n    .then(data => {\n      return {\n        movies: data.results,\n      };\n    });\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n    try { \n      if (localStorage.getItem(key) !== null) { localStorage.removeItem(key); }\n    } catch (error) {\n        console.error(\"Remove state error: \", error.message);\n    }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import storage from './storage';\nimport { currentPage } from './pagination';\n\nexport const STORAGE_PAGE_KEY = 'last visit page';\nexport const storagePage = storage.load(STORAGE_PAGE_KEY);\n\nchangeStoragePage();\n\nfunction changeStoragePage() {\n  if (currentPage > 1 && currentPage !== storagePage?.value) {\n    storage.remove(STORAGE_PAGE_KEY);\n    storage.save(STORAGE_PAGE_KEY, { value: currentPage });\n  }\n}\n","// import placeholder from './spinner';\n\nconst listElement = document.querySelector('.js-card');\nconst paginationElement = document.getElementById('pagination');\nconst arrowLeft = document.querySelector('.arrow_left');\nconst arrowRight = document.querySelector('.arrow_right');\nconst warningField = document.querySelector('.header-warning');\nexport let currentPage = 2;\nlet pageCount;\nconst pagesOnWindow = 5;\nlet rows = 20;\n\nfunction resetCurrentPage() {\n  currentPage = 1;\n}\n\n// главная функция для рендера pagination. Callback - функция для работы с fetch (зависит от раздела, где рисуем pagination)\nexport function renderPagination(totalPages, listItems, callback, searchQuery) {\n  paginationElement.innerHTML = '';\n  resetCurrentPage();\n  arrowLeft.removeEventListener('click', onArrowLeftClick);\n  arrowRight.removeEventListener('click', onArrowRightClick);\n\n  function setupPagination(items, wrapper, rowsPerPage) {\n    wrapper.innerHTML = '';\n\n    pageCount = totalPages;\n    let maxLeftPage = currentPage - Math.floor(pagesOnWindow / 2);\n    let maxRightPage = currentPage + Math.floor(pagesOnWindow / 2);\n\n    if (maxLeftPage < 1) {\n      maxLeftPage = 1;\n      maxRightPage = pagesOnWindow;\n    }\n\n    if (maxRightPage > totalPages) {\n      maxLeftPage = totalPages - (pagesOnWindow - 1);\n\n      if (maxLeftPage < 1) {\n        maxLeftPage = 1;\n      }\n      maxRightPage = totalPages;\n    }\n\n    for (let i = 1; i <= totalPages; i++) {\n      if (maxLeftPage !== 1 && i == 1) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      if (maxRightPage !== totalPages && i == totalPages) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      if (i >= maxLeftPage && i <= maxRightPage) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      // добавляет троеточие в pagination в зависимости от текущей страницы и общего к-ва страниц\n      if (\n        totalPages >= 6 &&\n        i == 1 &&\n        currentPage !== 1 &&\n        currentPage !== 2 &&\n        currentPage !== 3\n      ) {\n        const threeDotsEl = addThreeDotsBlock();\n        wrapper.insertBefore(threeDotsEl, wrapper[wrapper.length - 2]);\n      }\n\n      if (\n        pageCount >= 7 &&\n        i == pageCount - 1 &&\n        currentPage !== pageCount &&\n        currentPage !== pageCount - 2 &&\n        currentPage !== pageCount - 1\n      ) {\n        const threeDotsEl = addThreeDotsBlock();\n        wrapper.insertBefore(threeDotsEl, wrapper[1]);\n      }\n    }\n\n    placeholder.spinner.close();\n  }\n\n  // создает троеточия для pagination\n  function addThreeDotsBlock() {\n    const threeDots = document.createElement('div');\n    threeDots.classList.add('threeDots');\n    threeDots.innerText = '...';\n    return threeDots;\n  }\n\n  function paginationButton(page, items) {\n    let button = document.createElement('button');\n    button.innerText = page;\n\n    if (currentPage == page) button.classList.add('active');\n\n    button.addEventListener('click', function () {\n      warningField.textContent = ``;\n      placeholder.spinner.show();\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage = page;\n      callback(listElement, currentPage, searchQuery);\n\n      let current_btn = document.querySelector('.pagenumbers button.active');\n      current_btn.classList.remove('active');\n\n      button.classList.add('active');\n      setupPagination(listItems, paginationElement, rows);\n      hideExtremeButtons(totalPages);\n    });\n\n    return button;\n  }\n\n  // ф-кция для отслеживания кликов по стрелке влево\n  function onArrowLeftClick() {\n    if (currentPage > 1) {\n      placeholder.spinner.show();\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage--;\n      setupPagination(listItems, paginationElement, rows);\n      callback(listElement, currentPage, searchQuery);\n    }\n\n    disableArrowBtn(totalPages);\n    hideExtremeButtons(totalPages);\n  }\n\n  // ф-кция для отслеживания кликов по стрелке вправо\n  function onArrowRightClick() {\n    if (currentPage < totalPages) {\n      placeholder.spinner.show();\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage++;\n      setupPagination(listItems, paginationElement, rows);\n      callback(listElement, currentPage, searchQuery);\n    }\n    disableArrowBtn(totalPages);\n    hideExtremeButtons(totalPages);\n  }\n\n  setupPagination(listItems, paginationElement, rows);\n  arrowLeft.onclick = onArrowLeftClick;\n  arrowRight.onclick = onArrowRightClick;\n\n  hideExtremeButtons(totalPages);\n  disableArrowBtn(totalPages);\n}\n\n// прячет первую и последнюю страницу по бокам для мобильных гаджетов с маленьким экраном\nfunction hideExtremeButtons(totalPages) {\n  try {\n    if (\n      /Android|webOS|iPhone|iPad|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent,\n      )\n    ) {\n      // код для мобильных устройств\n      const allPaginationBtns = document.querySelectorAll('#pagination button');\n      if (currentPage > 3) {\n        allPaginationBtns[0].classList.add('hide');\n      } else {\n        allPaginationBtns[0].classList.remove('hide');\n      }\n\n      if (currentPage < totalPages - 3) {\n        allPaginationBtns[allPaginationBtns.length - 1].classList.add('hide');\n      } else {\n        allPaginationBtns[allPaginationBtns.length - 1].classList.remove(\n          'hide',\n        );\n      }\n    }\n  } catch (error) {}\n}\n\npaginationElement.addEventListener('click', disableArrowBtnAfterPageClick);\n\nfunction disableArrowBtnAfterPageClick(e) {\n  if (e.target.tagName != 'BUTTON') {\n    return;\n  } else {\n    disableArrowBtn(pageCount);\n  }\n}\n\n// делает неактивными кнопки-стрелки на первой и последней  странице\nfunction disableArrowBtn(totalPages) {\n  if (currentPage === 1) {\n    arrowLeft.classList.add('disabled-arrow');\n  } else {\n    arrowLeft.classList.remove('disabled-arrow');\n  }\n\n  if (currentPage === totalPages) {\n    arrowRight.classList.add('disabled-arrow');\n  } else {\n    arrowRight.classList.remove('disabled-arrow');\n  }\n}","import storage from './storage';\n\nconst backdrop = document.querySelector('[data-modal]');\nconst closeButton = document.querySelector('[data-modal-close]');\nconst cardsContainer = document.querySelector('.home-container');\n\ncardsContainer.addEventListener('click', e => {\n  //Тиць по 'js-modal-open' -> відкриває модалку\n  if (e.target.closest('.js-modal-open')) {\n    e.preventDefault();\n    openModal(e.target.closest('.js-modal-open').dataset.cardMovieId);\n  }\n});\n\n// Тиць по 'data-modal-close' ->закриває модалку\ncloseButton.addEventListener('click', closeModal);\n\n//Press по Esc ->закриває модалку\nfunction pressEsc(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n\n// Тиць по backdrop -> закриває модалку\nbackdrop.addEventListener('click', backdropClick);\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModal();\n    return;\n  }\n  if (e.target.nodeName === 'BUTTON') {\n    addMovieToLibrary(e.target.closest('.movie-btn'));\n  }\n}\n\n// Якщо модалка відкрита -> кидаємо AddEventListener\nfunction openModal(movieId) {\n  document.addEventListener('keydown', pressEsc);\n\n  backdrop.querySelector('.modal-movie').dataset.modalMovieId = movieId;\n  backdrop.querySelector('.modal-movie').innerHTML = getModalMovieMarkup(movieId);\n  document.body.style.overflow = 'hidden';\n  backdrop.classList.remove('is-hidden');\n}\n\n// Як тільки закривається модалка -> знімаємо EventListener\nfunction closeModal() {\n  document.addEventListener('keydown', pressEsc);\n  document.body.style.overflow = '';\n  backdrop.classList.add('is-hidden');\n}\n\nfunction getModalMovieMarkup(movieId) {\n  const {\n    poster_path,\n    title,\n    original_title,\n    genres_ids,\n    release_date,\n    vote_average,\n    vote_count,\n    popularity,\n    overview,\n  } = storage.load('movies')?.find(movie => movie.id.toString() === movieId);\n\n  movieId = movieId.toString();\n\n  // const btnAddToWatched = isInLibrary('watched-list', movieId.toString())\n  //   ? `<button class=\"modal-movie__btn modal-movie_btn-watched added\" data-modal-add-to=\"watched\">REMOVE FROM<br>WATCHED</button>`\n  //   : `<button class=\"modal-movie__btn modal-movie__btn-watched\" data-modal-add-to=\"watched\">ADD TO<br>WATCHED</button>`;\n\n  // const btnAddToQueue = isInLibrary('queue-list', movieId.toString())\n  //   ? `<button class=\"modal-movie__btn modal-movie__btn-queue added\" data-modal-add-to=\"queue\">REMOVE FROM<br>QUEUE</button>`\n  //   : `<button class=\"modal-movie__btn modal-movie__btn-queue\" data-modal-add-to=\"queue\">ADD TO<br>QUEUE</button>`;\n\n  let addedClass = isInLibrary('watched-list', movieId.toString()) ? 'added' : '';\n  const btnAddToWatched = `<div class=\"modal-movie__btn movie-btn movie-btn--watched ${addedClass}\" data-modal-add-to=\"watched\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>WATCHED</button>\n                            <button class=\"add\">ADD TO<br>WATCHED</button>\n                          </div>\n                        </div>`;\n\n  addedClass = isInLibrary('queue-list', movieId.toString()) ? 'added' : '';\n  const btnAddToQueue = `<div class=\"modal-movie__btn movie-btn movie-btn--queue ${addedClass}\" data-modal-add-to=\"queue\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>QUEUE</button>\n                            <button class=\"add\">ADD TO<br>QUEUE</button>\n                          </div>\n                        </div>`;\n\n  return `<div class=\"modal-movie__poster\">\n            <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt=\"${title}\" />\n          </div>\n            <div class=\"modal-movie__info\">\n                <h2 class=\"modal-movie__title\">${title}</h2>\n                <table class=\"movie-table\">\n                    <tr>\n                        <td class=\"movie-table__title\">Vote / Votes</td>\n                        <td class=\"movie-table__info\">\n                            <span class=\"vote\">${vote_average}</span>\n                            <span>/</span>\n                            <span class=\"votes\">${vote_count}</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Popularity</td>\n                        <td class=\"movie-table__info\">${popularity}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Original Title</td>\n                        <td class=\"movie-table__info\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Genre</td>\n                        <td class=\"movie-table__info\">${genres_ids}</td>\n                    </tr>\n                </table>\n                <div class=\"modal-movie__box\">\n                <div class=\"modal-movie__about\">\n                    <p class=\"modal-movie__description\">ABOUT</p>\n                    <p class=\"modal-movie__text\">${overview}</p>\n                </div>\n                <div class=\"modal-movie__buttons\">\n                    ${btnAddToWatched}\n                    ${btnAddToQueue}\n                </div>\n                </div>\n            </div>`;\n}\n\n/* -----------------------\n\nModal buttons functionality\n\n----------------------- */\n\nfunction addMovieToLibrary(button) {\n  // console.dir(button);\n  const key = button.dataset?.modalAddTo + '-list';\n  const movieId = button.closest('.modal-movie').dataset.modalMovieId;\n\n  const value = storage.load('movies')?.find(movie => movie.id.toString() === movieId);\n  // console.dir(value.id);\n\n  let currentList = storage.load(key) || [];\n  // console.dir(currentList);\n\n  if (storage.load(key) && isInLibrary(key, value.id.toString())) {\n    button.classList.remove('added');\n    currentList = currentList.filter(movie => movie.id.toString() != value.id);\n  } else {\n    currentList.push(value);\n    button.classList.add('added');\n  }\n\n  storage.save(key, currentList);\n}\n\nfunction isInLibrary(storageKey, valueId) {\n  return storage.load(storageKey)?.some(movie => movie.id.toString() === valueId);\n}\n"],"names":["$5uEKZ","parcelRequire","$16230cf6cab73dd4$var$formField","document","querySelector","$16230cf6cab73dd4$var$homeList","$16230cf6cab73dd4$var$spinner","$16230cf6cab73dd4$var$textError","$16230cf6cab73dd4$var$movieName","$16230cf6cab73dd4$export$867842ca7ae981de","movies","map","id","poster_path","title","original_title","genres_ids","release_date","Date","getFullYear","join","addEventListener","event","preventDefault","classList","add","remove","elements","query","value","trim","alert","async","movieName1","searchParams","URLSearchParams","api_key","language","fetch","then","res","ok","json","Error","statusText","data","results","$16230cf6cab73dd4$var$fetchMovies","length","default","save","innerHTML","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","$d567087ff47545b2$export$6480921c90b27dca","$d567087ff47545b2$export$1826db2756105efe","load","$2nhTy","currentPage","$1bab9c519cfa82bc$var$paginationElement","getElementById","$1bab9c519cfa82bc$var$arrowLeft","$1bab9c519cfa82bc$var$arrowRight","$1bab9c519cfa82bc$var$pageCount","$1bab9c519cfa82bc$export$385972cd6b54c3e1","$1bab9c519cfa82bc$var$disableArrowBtn","totalPages","e","target","tagName","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$closeButton","$8a7e756c566dd1ea$var$pressEsc","code","$8a7e756c566dd1ea$var$closeModal","body","style","overflow","$8a7e756c566dd1ea$var$isInLibrary","storageKey","valueId","ref","some","movie","toString","movieId","closest","dataset","cardMovieId","modalMovieId","vote_average","vote_count","popularity","overview","find","addedClass","btnAddToWatched","$8a7e756c566dd1ea$var$getModalMovieMarkup","currentTarget","nodeName","button","ref1","modalAddTo","currentList","filter","push","$8a7e756c566dd1ea$var$addMovieToLibrary"],"version":3,"file":"index.860536f1.js.map"}