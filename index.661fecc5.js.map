{"mappings":"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","sources":["src/js/fetchMovies.js","src/js/storage.js","src/js/pageInStorage.js","src/js/pagination.js","src/js/modal.js"],"sourcesContent":["import storage from './storage';\nimport { storagePage,STORAGE_MOVIES_SEARCH,storageLastSearchText } from './pageInStorage';\n\nconst formField = document.querySelector('.form-field');\nconst homeList = document.querySelector('.home-list');\nconst spinner = document.querySelector('.spinner-loader');\nconst textError = document.querySelector('.search-result');\nlet movieName = '';\nlet page = 1;\n\nformField?.addEventListener('submit', event => {\n  event.preventDefault();\n  textError.classList.add('is-hidden');\n  spinner.classList.remove('is-hidden');\n  movieName = formField.elements.query.value.trim(); \n  if (movieName === '') {\n    spinner.classList.add('is-hidden');\n    return alert('Empty field');\n  }\n  fetchMovies(movieName).then(({ movies }) => {\n    if (movies.length === 0) {\n      spinner.classList.add('is-hidden');\n      textError.classList.remove('is-hidden');\n      return;\n    }\n    storage.save(STORAGE_MOVIES_SEARCH,{movie: movieName});\n    storage.save('movies', movies);\n    homeList.innerHTML = movieCards(movies);\n    spinner.classList.add('is-hidden');\n     setTimeout(() => {\n      const arr = document.querySelectorAll('.placeholdify');\n      arr.forEach(el => el.classList.remove('placeholdify'));\n      },2000);\n  });\n});\n\nexport function movieCards(movies) {\n  return movies\n    .map(({ id, poster_path, title, original_title, genres_ids, release_date }) => {\n      const imgUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n        : // : './images/netuNichego.png';\n          'https://via.placeholder.com/395x574/FFFFFF/FF001B?text=No+poster';\n      const year = new Date(release_date).getFullYear();\n      return `<li class=\"home-card js-modal-open placeholdify\" data-card-movie-id=\"${id}\">\n            <a href=\"#\" class=\"home-card__link\">\n                <div class=\"card-info\">\n                    <img class=\"home-card__img\" src=\"${imgUrl}\" alt=\"${title}\">\n                    <h2 class=\"card-info__title\">${original_title}</h2>\n                    <p class=\"card-info_descr\">\n                        <span>${genres_ids}</span>\n                        |\n                        <span>${year}</span>\n                    </p>\n                </div>\n            </a>\n        </li>`;\n    })\n    .join('');\n}\n   \n \n\nasync function fetchMovies(movieName,page) {\n  const searchParams = new URLSearchParams({\n    api_key: '659c146febfafc17fd54baa17527f7fa',\n    language: 'en-US',\n    query: movieName,\n  });\n\n  return fetch(`https://api.themoviedb.org/3/search/movie?${searchParams}&page=${page}`)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error(res.statusText);\n    })\n    .then(data => {\n      return {\n        movies: data.results,\n      };\n    });\n      \n}\n\n\n//load last page search\nexport function loadStoragePage() {      \n  textError.classList.add('is-hidden');\n  spinner.classList.remove('is-hidden');\n  movieName = storageLastSearchText?.movie;\n  page = storagePage?.value;\n  if (movieName === '') {\n    spinner.classList.add('is-hidden');\n    return alert('Empty field');\n  }\n  fetchMovies(movieName,page).then(({ movies }) => {\n    if (movies.length === 0) {\n      spinner.classList.add('is-hidden');\n      textError.classList.remove('is-hidden');\n      return;\n    }\n    storage.save('movies', movies);\n    homeList.innerHTML = movieCards(movies);\n    spinner.classList.add('is-hidden');\n  });\n};\n \n\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n    try { \n      if (localStorage.getItem(key) !== null) { localStorage.removeItem(key); }\n    } catch (error) {\n        console.error(\"Remove state error: \", error.message);\n    }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import storage from './storage';\n// import { currentPage } from './pagination';\nimport * as page from './pagination';\nexport const STORAGE_PAGE_KEY = 'last visit page';\nexport const STORAGE_MOVIES_SEARCH = 'last visit search'\nexport const storagePage = storage.load(STORAGE_PAGE_KEY);\nexport const storageLastSearchText = storage.load(STORAGE_MOVIES_SEARCH);\n\n\nchangeStoragePage();\n\nfunction changeStoragePage() {   \n    storage.save(STORAGE_PAGE_KEY, { value: page.currentPage });\n  \n}\n","// import placeholder from './spinner';\n\nconst listElement = document.querySelector('.js-card');\nconst paginationElement = document.getElementById('pagination');\nconst arrowLeft = document.querySelector('.arrow_left');\nconst arrowRight = document.querySelector('.arrow_right');\nconst warningField = document.querySelector('.header-warning');\nexport let currentPage = 2;\nlet pageCount;\nconst pagesOnWindow = 5;\nlet rows = 20;\n\nfunction resetCurrentPage() {\n  currentPage = 1;\n}\n\n// главная функция для рендера pagination. Callback - функция для работы с fetch (зависит от раздела, где рисуем pagination)\nexport function renderPagination(totalPages, listItems, callback, searchQuery) {\n  paginationElement.innerHTML = '';\n  resetCurrentPage();\n  arrowLeft.removeEventListener('click', onArrowLeftClick);\n  arrowRight.removeEventListener('click', onArrowRightClick);\n\n  function setupPagination(items, wrapper, rowsPerPage) {\n    wrapper.innerHTML = '';\n\n    pageCount = totalPages;\n    let maxLeftPage = currentPage - Math.floor(pagesOnWindow / 2);\n    let maxRightPage = currentPage + Math.floor(pagesOnWindow / 2);\n\n    if (maxLeftPage < 1) {\n      maxLeftPage = 1;\n      maxRightPage = pagesOnWindow;\n    }\n\n    if (maxRightPage > totalPages) {\n      maxLeftPage = totalPages - (pagesOnWindow - 1);\n\n      if (maxLeftPage < 1) {\n        maxLeftPage = 1;\n      }\n      maxRightPage = totalPages;\n    }\n\n    for (let i = 1; i <= totalPages; i++) {\n      if (maxLeftPage !== 1 && i == 1) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      if (maxRightPage !== totalPages && i == totalPages) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      if (i >= maxLeftPage && i <= maxRightPage) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      // добавляет троеточие в pagination в зависимости от текущей страницы и общего к-ва страниц\n      if (\n        totalPages >= 6 &&\n        i == 1 &&\n        currentPage !== 1 &&\n        currentPage !== 2 &&\n        currentPage !== 3\n      ) {\n        const threeDotsEl = addThreeDotsBlock();\n        wrapper.insertBefore(threeDotsEl, wrapper[wrapper.length - 2]);\n      }\n\n      if (\n        pageCount >= 7 &&\n        i == pageCount - 1 &&\n        currentPage !== pageCount &&\n        currentPage !== pageCount - 2 &&\n        currentPage !== pageCount - 1\n      ) {\n        const threeDotsEl = addThreeDotsBlock();\n        wrapper.insertBefore(threeDotsEl, wrapper[1]);\n      }\n    }\n\n    placeholder.spinner.close();\n  }\n\n  // создает троеточия для pagination\n  function addThreeDotsBlock() {\n    const threeDots = document.createElement('div');\n    threeDots.classList.add('threeDots');\n    threeDots.innerText = '...';\n    return threeDots;\n  }\n\n  function paginationButton(page, items) {\n    let button = document.createElement('button');\n    button.innerText = page;\n\n    if (currentPage == page) button.classList.add('active');\n\n    button.addEventListener('click', function () {\n      warningField.textContent = ``;\n      placeholder.spinner.show();\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage = page;\n      callback(listElement, currentPage, searchQuery);\n\n      let current_btn = document.querySelector('.pagenumbers button.active');\n      current_btn.classList.remove('active');\n\n      button.classList.add('active');\n      setupPagination(listItems, paginationElement, rows);\n      hideExtremeButtons(totalPages);\n    });\n\n    return button;\n  }\n\n  // ф-кция для отслеживания кликов по стрелке влево\n  function onArrowLeftClick() {\n    if (currentPage > 1) {\n      placeholder.spinner.show();\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage--;\n      setupPagination(listItems, paginationElement, rows);\n      callback(listElement, currentPage, searchQuery);\n    }\n\n    disableArrowBtn(totalPages);\n    hideExtremeButtons(totalPages);\n  }\n\n  // ф-кция для отслеживания кликов по стрелке вправо\n  function onArrowRightClick() {\n    if (currentPage < totalPages) {\n      placeholder.spinner.show();\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage++;\n      setupPagination(listItems, paginationElement, rows);\n      callback(listElement, currentPage, searchQuery);\n    }\n    disableArrowBtn(totalPages);\n    hideExtremeButtons(totalPages);\n  }\n\n  setupPagination(listItems, paginationElement, rows);\n  arrowLeft.onclick = onArrowLeftClick;\n  arrowRight.onclick = onArrowRightClick;\n\n  hideExtremeButtons(totalPages);\n  disableArrowBtn(totalPages);\n}\n\n// прячет первую и последнюю страницу по бокам для мобильных гаджетов с маленьким экраном\nfunction hideExtremeButtons(totalPages) {\n  try {\n    if (/Android|webOS|iPhone|iPad|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n      // код для мобильных устройств\n      const allPaginationBtns = document.querySelectorAll('#pagination button');\n      if (currentPage > 3) {\n        allPaginationBtns[0].classList.add('hide');\n      } else {\n        allPaginationBtns[0].classList.remove('hide');\n      }\n\n      if (currentPage < totalPages - 3) {\n        allPaginationBtns[allPaginationBtns.length - 1].classList.add('hide');\n      } else {\n        allPaginationBtns[allPaginationBtns.length - 1].classList.remove('hide');\n      }\n    }\n  } catch (error) {}\n}\n\npaginationElement?.addEventListener('click', disableArrowBtnAfterPageClick);\n\nfunction disableArrowBtnAfterPageClick(e) {\n  if (e.target.tagName != 'BUTTON') {\n    return;\n  } else {\n    disableArrowBtn(pageCount);\n  }\n}\n\n// делает неактивными кнопки-стрелки на первой и последней  странице\nfunction disableArrowBtn(totalPages) {\n  if (currentPage === 1) {\n    arrowLeft.classList.add('disabled-arrow');\n  } else {\n    arrowLeft.classList.remove('disabled-arrow');\n  }\n\n  if (currentPage === totalPages) {\n    arrowRight.classList.add('disabled-arrow');\n  } else {\n    arrowRight.classList.remove('disabled-arrow');\n  }\n}\n","import storage from './storage';\n\nconst backdrop = document.querySelector('[data-modal]');\nconst closeButton = document.querySelector('[data-modal-close]');\nconst cardsContainer = document.querySelector('.movies-container');\n\ncardsContainer.addEventListener('click', e => {\n  //Тиць по 'js-modal-open' -> відкриває модалку\n  if (e.target.closest('.js-modal-open')) {\n    e.preventDefault();\n    openModal(e.target.closest('.js-modal-open').dataset.cardMovieId);\n  }\n});\n\n// Тиць по 'data-modal-close' ->закриває модалку\ncloseButton.addEventListener('click', closeModal);\n\n//Press по Esc ->закриває модалку\nfunction pressEsc(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n\n// Тиць по backdrop -> закриває модалку\nbackdrop.addEventListener('click', backdropClick);\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModal();\n    return;\n  }\n  if (e.target.nodeName === 'BUTTON') {\n    addMovieToLibrary(e.target.closest('.movie-btn'));\n  }\n}\n\n// Якщо модалка відкрита -> кидаємо AddEventListener\nfunction openModal(movieId) {\n  document.addEventListener('keydown', pressEsc);\n\n  backdrop.querySelector('.modal-movie').dataset.modalMovieId = movieId;\n  backdrop.querySelector('.modal-movie').innerHTML = getModalMovieMarkup(movieId);\n  document.body.style.overflow = 'hidden';\n  backdrop.classList.remove('is-hidden');\n  // const { vote_average } =\n  //   getMovieFromLocalStorage(movieId, 'movies') ||\n  //   getMovieFromLocalStorage(movieId, 'watched-list') ||\n  //   getMovieFromLocalStorage(movieId, 'queue-list');\n  // console.log(vote_average);\n  const vote_average = backdrop.querySelector('#out').textContent;\n  outNum(vote_average, '#out');\n}\n\nfunction getMovieFromLocalStorage(movieId, key) {\n  return storage.load(key)?.find(movie => movie.id.toString() === movieId);\n}\n\n// Як тільки закривається модалка -> знімаємо EventListener\nfunction closeModal() {\n  storage.remove('current-movie');\n  document.addEventListener('keydown', pressEsc);\n  document.body.style.overflow = '';\n  backdrop.classList.add('is-hidden');\n}\n\nfunction getModalMovieMarkup(movieId) {\n  const currentMovie =\n    getMovieFromLocalStorage(movieId, 'movies') ||\n    getMovieFromLocalStorage(movieId, 'watched-list') ||\n    getMovieFromLocalStorage(movieId, 'queue-list');\n\n  storage.save('current-movie', currentMovie);\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    genres_ids,\n    release_date,\n    vote_average,\n    vote_count,\n    popularity,\n    overview,\n  } = currentMovie;\n\n  movieId = movieId.toString();\n\n  let addedClass = isInLibrary('watched-list', movieId.toString()) ? 'added' : '';\n  const btnAddToWatched = `<div class=\"modal-movie__btn movie-btn movie-btn--watched ${addedClass}\" data-modal-add-to=\"watched\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>WATCHED</button>\n                            <button class=\"add\">ADD TO<br>WATCHED</button>\n                          </div>\n                        </div>`;\n\n  addedClass = isInLibrary('queue-list', movieId.toString()) ? 'added' : '';\n  const btnAddToQueue = `<div class=\"modal-movie__btn movie-btn movie-btn--queue ${addedClass}\" data-modal-add-to=\"queue\">\n                          <div class=\"movie-btn__inner\">\n                            <button class=\"remove\">REMOVE FROM<br>QUEUE</button>\n                            <button class=\"add\">ADD TO<br>QUEUE</button>\n                          </div>\n                        </div>`;\n\n  return `<div class=\"modal-movie__poster\">\n            <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt=\"${title}\" />\n          </div>\n            <div class=\"modal-movie__info\">\n                <h2 class=\"modal-movie__title\">${title}</h2>\n                <table class=\"movie-table\">\n                    <tr>\n                        <td class=\"movie-table__title\">Vote / Votes</td>\n                        <td class=\"movie-table__info\">\n                            <span id=\"out\" class=\"vote\">${vote_average.toFixed(1)}</span>\n                            <span>/</span>\n                            <span class=\"votes\">${vote_count}</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Popularity</td>\n                        <td class=\"movie-table__info\">${popularity.toFixed(0)}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Original Title</td>\n                        <td class=\"movie-table__info\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie-table__title\">Genre</td>\n                        <td class=\"movie-table__info\">${genres_ids}</td>\n                    </tr>\n                </table>\n                <div class=\"modal-movie__box\">\n                <div class=\"modal-movie__about\">\n                    <p class=\"modal-movie__description\">ABOUT</p>\n                    <p class=\"modal-movie__text\">${overview}</p>\n                </div>\n                <div class=\"modal-movie__buttons\">\n                    ${btnAddToWatched}\n                    ${btnAddToQueue}\n                </div>\n                </div>\n            </div>`;\n}\n\n/* -----------------------\n\nModal buttons functionality\n\n----------------------- */\n\nfunction addMovieToLibrary(button) {\n  const key = button.dataset?.modalAddTo + '-list';\n  // const movieId = button.closest('.modal-movie').dataset.modalMovieId;\n\n  const SOURCE_KEY = 'current-movie';\n\n  const value = storage.load(SOURCE_KEY);\n\n  if (storage.load(key) && isInLibrary(key, value.id.toString())) {\n    removeFromStorage(key, value, button);\n  } else {\n    if (key.includes('watch') && isInLibrary('queue-list', value.id.toString())) {\n      console.log('already in queue');\n      removeFromStorage(\n        'queue-list',\n        value,\n        button.parentElement.querySelector('.movie-btn--queue')\n      );\n    }\n    addToStorage(key, value, button);\n  }\n}\n\nfunction addToStorage(key, value, button) {\n  let currentList = storage.load(key) || [];\n  currentList.push(value);\n  button.classList.add('added');\n  storage.save(key, currentList);\n}\n\nfunction removeFromStorage(key, value, button) {\n  let currentList = storage.load(key) || [];\n  button.classList.remove('added');\n  currentList = currentList.filter(movie => movie.id.toString() != value.id);\n  storage.save(key, currentList);\n}\n\nfunction isInLibrary(storageKey, valueId) {\n  return storage.load(storageKey)?.some(movie => movie.id.toString() === valueId);\n}\n\nfunction outNum(num, elem) {\n  const time = 2500;\n  const step = 0.1;\n  let e = document.querySelector('#out');\n  let n = 0;\n  let t = Math.round(time / (num / step));\n  let interval = setInterval(() => {\n    n = n + step;\n    if (n >= num) {\n      clearInterval(interval);\n    }\n    e.innerHTML = n.toFixed(1);\n  }, t);\n}\n"],"names":["$5uEKZ","parcelRequire","$16230cf6cab73dd4$var$formField","document","querySelector","$16230cf6cab73dd4$var$homeList","$16230cf6cab73dd4$var$spinner","$16230cf6cab73dd4$var$textError","$16230cf6cab73dd4$var$movieName","$16230cf6cab73dd4$var$page","$16230cf6cab73dd4$export$867842ca7ae981de","movies","map","id","poster_path","title","original_title","genres_ids","release_date","Date","getFullYear","join","async","$16230cf6cab73dd4$var$fetchMovies","movieName1","page1","searchParams","URLSearchParams","api_key","language","query","fetch","then","res","ok","json","Error","statusText","data","results","$16230cf6cab73dd4$export$588d92c3164a0c5a","classList","add","remove","$ijW3m","storageLastSearchText","movie","storagePage","value","alert","length","default","save","innerHTML","addEventListener","event","preventDefault","elements","trim","STORAGE_MOVIES_SEARCH","setTimeout","querySelectorAll","forEach","el","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","$d567087ff47545b2$export$6480921c90b27dca","$d567087ff47545b2$export$ade5218dc613f789","$d567087ff47545b2$export$1826db2756105efe","load","$d567087ff47545b2$export$4505c8f675952b2a","$2nhTy","currentPage","$1bab9c519cfa82bc$var$paginationElement","getElementById","$1bab9c519cfa82bc$var$arrowLeft","$1bab9c519cfa82bc$var$arrowRight","$1bab9c519cfa82bc$var$pageCount","$1bab9c519cfa82bc$export$385972cd6b54c3e1","$1bab9c519cfa82bc$var$disableArrowBtn","totalPages","e","target","tagName","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$closeButton","$8a7e756c566dd1ea$var$pressEsc","code","$8a7e756c566dd1ea$var$closeModal","$8a7e756c566dd1ea$var$getMovieFromLocalStorage","movieId","ref","find","toString","body","style","overflow","$8a7e756c566dd1ea$var$removeFromStorage","button","currentList","filter","$8a7e756c566dd1ea$var$isInLibrary","storageKey","valueId","some","closest","dataset","modalMovieId","currentMovie","vote_average","vote_count","popularity","overview","addedClass","btnAddToWatched","btnAddToQueue","toFixed","$8a7e756c566dd1ea$var$getModalMovieMarkup","num","elem","time","step","n","t","Math","round","interval","setInterval","clearInterval","$8a7e756c566dd1ea$var$outNum","textContent","$8a7e756c566dd1ea$var$openModal","cardMovieId","currentTarget","nodeName","modalAddTo","SOURCE_KEY","includes","log","parentElement","push","$8a7e756c566dd1ea$var$addToStorage","$8a7e756c566dd1ea$var$addMovieToLibrary"],"version":3,"file":"index.661fecc5.js.map"}